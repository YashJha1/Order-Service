package com.eci.orderservice.service;

import com.eci.orderservice.dto.PaymentResponse;
import com.eci.orderservice.model.Order;
import com.eci.orderservice.client.CatalogClient;
import com.eci.orderservice.client.InventoryClient;
import com.eci.orderservice.dto.InventoryRequest;
import com.eci.orderservice.dto.InventoryResponse;
import com.eci.orderservice.dto.ProductDto;
import com.eci.orderservice.client.PaymentClient; // if not present
//import com.eci.orderservice.model.Order;
import com.eci.orderservice.model.OrderItem;
import com.eci.orderservice.repository.OrderRepository;
import com.eci.orderservice.repository.OrderItemRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import com.eci.orderservice.dto.OrderRequest;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Optional;

public interface OrderService {
	Order createOrder(OrderRequest orderRequest);
    
//    @Autowired
//    private CatalogClient catalogClient;

 //   @Autowired
  //  private InventoryClient inventoryClient;

// you likely already have:
    //@Autowired
    //private PaymentClient paymentClient;

    //@Autowired
    //private OrderRepository orderRepository;

    //@Autowired
    //private OrderItemRepository orderItemRepository;
 

    // Basic CRUD
    List<Order> getAllOrders();

    Optional<Order> getOrderById(Long orderId);

    Order createOrder(Order order);

    Order updateOrder(Long orderId, Order updatedOrder);

    void deleteOrder(Long orderId);

    // Filters
    List<Order> getOrdersByStatus(String status);

    List<Order> getOrdersByCustomer(Long customerId);

    List<Order> getOrdersByCustomerAndStatus(Long customerId, String status);

    List<Order> getOrdersByDateRange(OffsetDateTime startDate, OffsetDateTime endDate);

    // Payment integration
    List<PaymentResponse> getPaymentsByOrderId(Long orderId);
}

